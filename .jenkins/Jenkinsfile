#!/usr/bin/env groovy

// Continuous Integration script to build mkdocs in Docker
// Author: mauricio.diaz@inria.fr

pipeline {
  agent none
    stages {
      stage('Build the docs') {
        agent {
          dockerfile {
              filename 'Dockerfile'
              reuseNode true
          }
        }
        environment {
          CONDA_HOME = '/opt/conda'
          PATH = "/opt/conda/bin:/opt/conda/condabin:$PATH"
        }
        steps {
          echo 'My branch name is ${BRANCH_NAME}'
          sh 'echo "My branch name is ${BRANCH_NAME}"'
          sh 'echo "Agent name: ${NODE_NAME}"'
          sh 'pwd'
          sh '$MAMBA_EXE info'
          sh 'printenv'
          //sh '. /usr/local/bin/_activate_current_env.sh'
          sh '''#!/bin/bash
            source /usr/local/bin/_activate_current_env.sh
            poetry about
            poetry install
            make build.notebooks
            make build.book
            sed -i 's+github/aramis-lab/clinicadl_handbook/blob/main/jupyter-book/notebooks+github/aramis-lab/clinicadl_handbook/blob/main/notebooks+g' ./jupyter-book/_build/html/notebooks/*.html
          '''
          stash(name: 'doc_html', includes: 'jupyter-book/_build/html/**')
        }
      }
      stage('Deploy') {
        parallel {
          stage('Deploy site') {
            agent { label 'gpu' }
            when {
                branch 'main'
            }
            steps {
              echo 'Deploying in webserver...'
              unstash(name: 'doc_html')
              sshPublisher(
                publishers: [
                  sshPublisherDesc(
                    configName: 'web',
                    transfers: [
                      sshTransfer(
                        cleanRemote: false,
                        excludes: '',
                        execCommand: '',
                        execTimeout: 120000,
                        flatten: false,
                        makeEmptyDirs: false,
                        noDefaultExcludes: false,
                        patternSeparator: '[, ]+',
                        remoteDirectory: 'clinicadl/tutoriel/2023',
                        remoteDirectorySDF: false,
                        removePrefix: 'jupyter-book/_build',
                        sourceFiles: 'jupyter-book/_build/html/**')
                        ],
                      usePromotionTimestamp: false,
                      useWorkspaceInPromotion: false,
                      verbose: false)
                ]
              )
              echo 'Finish uploading artifacts'
            }
          }
        }
      }
    }
//    post {
//      failure {
//        mail to: 'clinicadl-ci@inria.fr',
//          subject: "This build of the welcome guide has failed: ${currentBuild.fullDisplayName}",
//          body: "Something is wrong with the build of the welcome guide ${env.BUILD_URL}"
//      }
//    }
}

